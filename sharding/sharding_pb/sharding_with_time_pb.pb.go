// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.25.1
// source: sharding_pb/sharding_with_time_pb.proto

package sharding_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 时间分割(分库/分表)策略的分割级别
type ShardingTimeLevel int32

const (
	ShardingTimeLevel_Disabled  ShardingTimeLevel = 0  // 不使用基于时间分割的规则
	ShardingTimeLevel_Hour      ShardingTimeLevel = 1  // 小时
	ShardingTimeLevel_HalfDay   ShardingTimeLevel = 2  // 半天(每12个小时分割一次)
	ShardingTimeLevel_Day       ShardingTimeLevel = 3  // 天
	ShardingTimeLevel_Week      ShardingTimeLevel = 4  // 周(每周一为分割日)
	ShardingTimeLevel_HalfMonth ShardingTimeLevel = 5  // 半月(每个月的1号和16号位分割月)
	ShardingTimeLevel_Month     ShardingTimeLevel = 6  // 月
	ShardingTimeLevel_TwoMonth  ShardingTimeLevel = 7  // 2月
	ShardingTimeLevel_Quarter   ShardingTimeLevel = 8  // 季度
	ShardingTimeLevel_HalfYear  ShardingTimeLevel = 9  // 半年
	ShardingTimeLevel_Year      ShardingTimeLevel = 10 // 年
)

// Enum value maps for ShardingTimeLevel.
var (
	ShardingTimeLevel_name = map[int32]string{
		0:  "Disabled",
		1:  "Hour",
		2:  "HalfDay",
		3:  "Day",
		4:  "Week",
		5:  "HalfMonth",
		6:  "Month",
		7:  "TwoMonth",
		8:  "Quarter",
		9:  "HalfYear",
		10: "Year",
	}
	ShardingTimeLevel_value = map[string]int32{
		"Disabled":  0,
		"Hour":      1,
		"HalfDay":   2,
		"Day":       3,
		"Week":      4,
		"HalfMonth": 5,
		"Month":     6,
		"TwoMonth":  7,
		"Quarter":   8,
		"HalfYear":  9,
		"Year":      10,
	}
)

func (x ShardingTimeLevel) Enum() *ShardingTimeLevel {
	p := new(ShardingTimeLevel)
	*p = x
	return p
}

func (x ShardingTimeLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShardingTimeLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_sharding_pb_sharding_with_time_pb_proto_enumTypes[0].Descriptor()
}

func (ShardingTimeLevel) Type() protoreflect.EnumType {
	return &file_sharding_pb_sharding_with_time_pb_proto_enumTypes[0]
}

func (x ShardingTimeLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShardingTimeLevel.Descriptor instead.
func (ShardingTimeLevel) EnumDescriptor() ([]byte, []int) {
	return file_sharding_pb_sharding_with_time_pb_proto_rawDescGZIP(), []int{0}
}

// 时间分割(分库/分表)策略配置的proto
type ShardingWithTimeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeLevel          ShardingTimeLevel      `protobuf:"varint,1,opt,name=timeLevel,proto3,enum=sharding_pb.ShardingTimeLevel" json:"timeLevel,omitempty"` // 时间分割级别
	SplitCharacter     string                 `protobuf:"bytes,2,opt,name=splitCharacter,proto3" json:"splitCharacter,omitempty"`                           // 分割字符
	TimeSplitCharacter string                 `protobuf:"bytes,3,opt,name=timeSplitCharacter,proto3" json:"timeSplitCharacter,omitempty"`                   // 各时间成员之间的分割字符
	EarliestValidTime  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=earliestValidTime,proto3" json:"earliestValidTime,omitempty"`                     // 最早的有效时间(分库分表的业务场景一般需要设置一个最早有效时间, 否则在查询等场景中可能出现表未创建的情况)
	PrefixMode         bool                   `protobuf:"varint,5,opt,name=prefixMode,proto3" json:"prefixMode,omitempty"`                                  // 时间信息是否置于命名前缀(默认位false，即采用raw - date的格式)
}

func (x *ShardingWithTimeConfig) Reset() {
	*x = ShardingWithTimeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sharding_pb_sharding_with_time_pb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardingWithTimeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardingWithTimeConfig) ProtoMessage() {}

func (x *ShardingWithTimeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_sharding_pb_sharding_with_time_pb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardingWithTimeConfig.ProtoReflect.Descriptor instead.
func (*ShardingWithTimeConfig) Descriptor() ([]byte, []int) {
	return file_sharding_pb_sharding_with_time_pb_proto_rawDescGZIP(), []int{0}
}

func (x *ShardingWithTimeConfig) GetTimeLevel() ShardingTimeLevel {
	if x != nil {
		return x.TimeLevel
	}
	return ShardingTimeLevel_Disabled
}

func (x *ShardingWithTimeConfig) GetSplitCharacter() string {
	if x != nil {
		return x.SplitCharacter
	}
	return ""
}

func (x *ShardingWithTimeConfig) GetTimeSplitCharacter() string {
	if x != nil {
		return x.TimeSplitCharacter
	}
	return ""
}

func (x *ShardingWithTimeConfig) GetEarliestValidTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EarliestValidTime
	}
	return nil
}

func (x *ShardingWithTimeConfig) GetPrefixMode() bool {
	if x != nil {
		return x.PrefixMode
	}
	return false
}

var File_sharding_pb_sharding_with_time_pb_proto protoreflect.FileDescriptor

var file_sharding_pb_sharding_with_time_pb_proto_rawDesc = []byte{
	0x0a, 0x27, 0x73, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2f, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x02, 0x0a, 0x16, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x3c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x70, 0x62, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x69, 0x6d, 0x65,
	0x53, 0x70, 0x6c, 0x69, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x11, 0x65, 0x61, 0x72, 0x6c,
	0x69, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x11, 0x65, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x4d, 0x6f,
	0x64, 0x65, 0x2a, 0x98, 0x01, 0x0a, 0x11, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x54,
	0x69, 0x6d, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x6f, 0x75, 0x72, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x48, 0x61, 0x6c, 0x66, 0x44, 0x61, 0x79, 0x10, 0x02, 0x12, 0x07, 0x0a,
	0x03, 0x44, 0x61, 0x79, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x65, 0x65, 0x6b, 0x10, 0x04,
	0x12, 0x0d, 0x0a, 0x09, 0x48, 0x61, 0x6c, 0x66, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x10, 0x05, 0x12,
	0x09, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x77,
	0x6f, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x51, 0x75, 0x61, 0x72,
	0x74, 0x65, 0x72, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x48, 0x61, 0x6c, 0x66, 0x59, 0x65, 0x61,
	0x72, 0x10, 0x09, 0x12, 0x08, 0x0a, 0x04, 0x59, 0x65, 0x61, 0x72, 0x10, 0x0a, 0x42, 0x41, 0x5a,
	0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x6f, 0x6e, 0x74,
	0x42, 0x65, 0x50, 0x72, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x6b, 0x69, 0x74, 0x73, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x62, 0x3b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sharding_pb_sharding_with_time_pb_proto_rawDescOnce sync.Once
	file_sharding_pb_sharding_with_time_pb_proto_rawDescData = file_sharding_pb_sharding_with_time_pb_proto_rawDesc
)

func file_sharding_pb_sharding_with_time_pb_proto_rawDescGZIP() []byte {
	file_sharding_pb_sharding_with_time_pb_proto_rawDescOnce.Do(func() {
		file_sharding_pb_sharding_with_time_pb_proto_rawDescData = protoimpl.X.CompressGZIP(file_sharding_pb_sharding_with_time_pb_proto_rawDescData)
	})
	return file_sharding_pb_sharding_with_time_pb_proto_rawDescData
}

var file_sharding_pb_sharding_with_time_pb_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sharding_pb_sharding_with_time_pb_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_sharding_pb_sharding_with_time_pb_proto_goTypes = []interface{}{
	(ShardingTimeLevel)(0),         // 0: sharding_pb.ShardingTimeLevel
	(*ShardingWithTimeConfig)(nil), // 1: sharding_pb.ShardingWithTimeConfig
	(*timestamppb.Timestamp)(nil),  // 2: google.protobuf.Timestamp
}
var file_sharding_pb_sharding_with_time_pb_proto_depIdxs = []int32{
	0, // 0: sharding_pb.ShardingWithTimeConfig.timeLevel:type_name -> sharding_pb.ShardingTimeLevel
	2, // 1: sharding_pb.ShardingWithTimeConfig.earliestValidTime:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_sharding_pb_sharding_with_time_pb_proto_init() }
func file_sharding_pb_sharding_with_time_pb_proto_init() {
	if File_sharding_pb_sharding_with_time_pb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sharding_pb_sharding_with_time_pb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardingWithTimeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sharding_pb_sharding_with_time_pb_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sharding_pb_sharding_with_time_pb_proto_goTypes,
		DependencyIndexes: file_sharding_pb_sharding_with_time_pb_proto_depIdxs,
		EnumInfos:         file_sharding_pb_sharding_with_time_pb_proto_enumTypes,
		MessageInfos:      file_sharding_pb_sharding_with_time_pb_proto_msgTypes,
	}.Build()
	File_sharding_pb_sharding_with_time_pb_proto = out.File
	file_sharding_pb_sharding_with_time_pb_proto_rawDesc = nil
	file_sharding_pb_sharding_with_time_pb_proto_goTypes = nil
	file_sharding_pb_sharding_with_time_pb_proto_depIdxs = nil
}
